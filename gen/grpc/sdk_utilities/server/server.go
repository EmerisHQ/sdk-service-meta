// Code generated by goa v3.5.2, DO NOT EDIT.
//
// sdk-utilities gRPC server
//
// Command:
// $ goa gen github.com/allinbits/sdk-service-meta

package server

import (
	"context"

	sdk_utilitiespb "github.com/allinbits/sdk-service-meta/gen/grpc/sdk_utilities/pb"
	sdkutilities "github.com/allinbits/sdk-service-meta/gen/sdk_utilities"
	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the sdk_utilitiespb.SdkUtilitiesServer interface.
type Server struct {
	SupplyH goagrpc.UnaryHandler
	sdk_utilitiespb.UnimplementedSdkUtilitiesServer
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the expr.
type ErrorNamer interface {
	ErrorName() string
}

// New instantiates the server struct with the sdk-utilities service endpoints.
func New(e *sdkutilities.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		SupplyH: NewSupplyHandler(e.Supply, uh),
	}
}

// NewSupplyHandler creates a gRPC handler which serves the "sdk-utilities"
// service "supply" endpoint.
func NewSupplyHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeSupplyRequest, EncodeSupplyResponse)
	}
	return h
}

// Supply implements the "Supply" method in sdk_utilitiespb.SdkUtilitiesServer
// interface.
func (s *Server) Supply(ctx context.Context, message *sdk_utilitiespb.SupplyRequest) (*sdk_utilitiespb.SupplyResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "supply")
	ctx = context.WithValue(ctx, goa.ServiceKey, "sdk-utilities")
	resp, err := s.SupplyH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*sdk_utilitiespb.SupplyResponse), nil
}

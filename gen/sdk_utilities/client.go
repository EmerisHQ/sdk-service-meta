// Code generated by goa v3.5.2, DO NOT EDIT.
//
// sdk-utilities client
//
// Command:
// $ goa gen github.com/allinbits/sdk-service-meta

package sdkutilities

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "sdk-utilities" service client.
type Client struct {
	SupplyEndpoint                      goa.Endpoint
	QueryTxEndpoint                     goa.Endpoint
	BroadcastTxEndpoint                 goa.Endpoint
	TxMetadataEndpoint                  goa.Endpoint
	AuthEndpointEndpoint                goa.Endpoint
	BankEndpoint                        goa.Endpoint
	DelegationEndpointEndpoint          goa.Endpoint
	IbcChannelEndpoint                  goa.Endpoint
	IbcClientStateEndpoint              goa.Endpoint
	IbcConnectionEndpoint               goa.Endpoint
	IbcDenomTraceEndpoint               goa.Endpoint
	UnbondingDelegationEndpointEndpoint goa.Endpoint
	ValidatorEndpointEndpoint           goa.Endpoint
}

// NewClient initializes a "sdk-utilities" service client given the endpoints.
func NewClient(supply, queryTx, broadcastTx, txMetadata, authEndpoint, bank, delegationEndpoint, ibcChannel, ibcClientState, ibcConnection, ibcDenomTrace, unbondingDelegationEndpoint, validatorEndpoint goa.Endpoint) *Client {
	return &Client{
		SupplyEndpoint:                      supply,
		QueryTxEndpoint:                     queryTx,
		BroadcastTxEndpoint:                 broadcastTx,
		TxMetadataEndpoint:                  txMetadata,
		AuthEndpointEndpoint:                authEndpoint,
		BankEndpoint:                        bank,
		DelegationEndpointEndpoint:          delegationEndpoint,
		IbcChannelEndpoint:                  ibcChannel,
		IbcClientStateEndpoint:              ibcClientState,
		IbcConnectionEndpoint:               ibcConnection,
		IbcDenomTraceEndpoint:               ibcDenomTrace,
		UnbondingDelegationEndpointEndpoint: unbondingDelegationEndpoint,
		ValidatorEndpointEndpoint:           validatorEndpoint,
	}
}

// Supply calls the "supply" endpoint of the "sdk-utilities" service.
func (c *Client) Supply(ctx context.Context, p *SupplyPayload) (res *Supply2, err error) {
	var ires interface{}
	ires, err = c.SupplyEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Supply2), nil
}

// QueryTx calls the "queryTx" endpoint of the "sdk-utilities" service.
func (c *Client) QueryTx(ctx context.Context, p *QueryTxPayload) (res []byte, err error) {
	var ires interface{}
	ires, err = c.QueryTxEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}

// BroadcastTx calls the "broadcastTx" endpoint of the "sdk-utilities" service.
func (c *Client) BroadcastTx(ctx context.Context, p *BroadcastTxPayload) (res *TransactionResult, err error) {
	var ires interface{}
	ires, err = c.BroadcastTxEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TransactionResult), nil
}

// TxMetadata calls the "txMetadata" endpoint of the "sdk-utilities" service.
func (c *Client) TxMetadata(ctx context.Context, p *TxMetadataPayload) (res *TxMessagesMetadata, err error) {
	var ires interface{}
	ires, err = c.TxMetadataEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TxMessagesMetadata), nil
}

// AuthEndpoint calls the "auth" endpoint of the "sdk-utilities" service.
// AuthEndpoint may return the following errors:
//	- "ProcessingError" (type *ProcessingError)
//	- error: internal error
func (c *Client) AuthEndpoint(ctx context.Context, p *AuthPayload) (res []*Auth, err error) {
	var ires interface{}
	ires, err = c.AuthEndpointEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*Auth), nil
}

// Bank calls the "bank" endpoint of the "sdk-utilities" service.
// Bank may return the following errors:
//	- "ProcessingError" (type *ProcessingError)
//	- error: internal error
func (c *Client) Bank(ctx context.Context, p *BankPayload) (res []*Balance, err error) {
	var ires interface{}
	ires, err = c.BankEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*Balance), nil
}

// DelegationEndpoint calls the "delegation" endpoint of the "sdk-utilities"
// service.
// DelegationEndpoint may return the following errors:
//	- "ProcessingError" (type *ProcessingError)
//	- error: internal error
func (c *Client) DelegationEndpoint(ctx context.Context, p *DelegationPayload) (res []*Delegation, err error) {
	var ires interface{}
	ires, err = c.DelegationEndpointEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*Delegation), nil
}

// IbcChannel calls the "ibc_channel" endpoint of the "sdk-utilities" service.
// IbcChannel may return the following errors:
//	- "ProcessingError" (type *ProcessingError)
//	- error: internal error
func (c *Client) IbcChannel(ctx context.Context, p *IbcChannelPayload) (res []*IBCChannel, err error) {
	var ires interface{}
	ires, err = c.IbcChannelEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*IBCChannel), nil
}

// IbcClientState calls the "ibc_client_state" endpoint of the "sdk-utilities"
// service.
// IbcClientState may return the following errors:
//	- "ProcessingError" (type *ProcessingError)
//	- error: internal error
func (c *Client) IbcClientState(ctx context.Context, p *IbcClientStatePayload) (res []*IBCClientState, err error) {
	var ires interface{}
	ires, err = c.IbcClientStateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*IBCClientState), nil
}

// IbcConnection calls the "ibc_connection" endpoint of the "sdk-utilities"
// service.
// IbcConnection may return the following errors:
//	- "ProcessingError" (type *ProcessingError)
//	- error: internal error
func (c *Client) IbcConnection(ctx context.Context, p *IbcConnectionPayload) (res []*IBCConnection, err error) {
	var ires interface{}
	ires, err = c.IbcConnectionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*IBCConnection), nil
}

// IbcDenomTrace calls the "ibc_denom_trace" endpoint of the "sdk-utilities"
// service.
// IbcDenomTrace may return the following errors:
//	- "ProcessingError" (type *ProcessingError)
//	- error: internal error
func (c *Client) IbcDenomTrace(ctx context.Context, p *IbcDenomTracePayload) (res []*IBCDenomTrace, err error) {
	var ires interface{}
	ires, err = c.IbcDenomTraceEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*IBCDenomTrace), nil
}

// UnbondingDelegationEndpoint calls the "unbondingDelegation" endpoint of the
// "sdk-utilities" service.
// UnbondingDelegationEndpoint may return the following errors:
//	- "ProcessingError" (type *ProcessingError)
//	- error: internal error
func (c *Client) UnbondingDelegationEndpoint(ctx context.Context, p *UnbondingDelegationPayload) (res []*UnbondingDelegation, err error) {
	var ires interface{}
	ires, err = c.UnbondingDelegationEndpointEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*UnbondingDelegation), nil
}

// ValidatorEndpoint calls the "validator" endpoint of the "sdk-utilities"
// service.
// ValidatorEndpoint may return the following errors:
//	- "ProcessingError" (type *ProcessingError)
//	- error: internal error
func (c *Client) ValidatorEndpoint(ctx context.Context, p *ValidatorPayload) (res []*Validator, err error) {
	var ires interface{}
	ires, err = c.ValidatorEndpointEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*Validator), nil
}

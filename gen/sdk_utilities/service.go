// Code generated by goa v3.5.2, DO NOT EDIT.
//
// sdk-utilities service
//
// Command:
// $ goa gen github.com/allinbits/sdk-service-meta

package sdkutilities

import (
	"context"
)

// sdk-utilities performs Cosmos SDK-related operations
type Service interface {
	// Supply implements supply.
	Supply(context.Context, *SupplyPayload) (res *Supply2, err error)
	// QueryTx implements queryTx.
	QueryTx(context.Context, *QueryTxPayload) (res []byte, err error)
	// BroadcastTx implements broadcastTx.
	BroadcastTx(context.Context, *BroadcastTxPayload) (res *TransactionResult, err error)
	// TxMetadata implements txMetadata.
	TxMetadata(context.Context, *TxMetadataPayload) (res *TxMessagesMetadata, err error)
	// Block implements block.
	Block(context.Context, *BlockPayload) (res *BlockData, err error)
	// LiquidityParams implements liquidityParams.
	LiquidityParams(context.Context, *LiquidityParamsPayload) (res *LiquidityParams2, err error)
	// LiquidityPools implements liquidityPools.
	LiquidityPools(context.Context, *LiquidityPoolsPayload) (res *LiquidityPools2, err error)
	// MintInflation implements mintInflation.
	MintInflation(context.Context, *MintInflationPayload) (res *MintInflation2, err error)
	// MintParams implements mintParams.
	MintParams(context.Context, *MintParamsPayload) (res *MintParams2, err error)
	// MintAnnualProvision implements mintAnnualProvision.
	MintAnnualProvision(context.Context, *MintAnnualProvisionPayload) (res *MintAnnualProvision2, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "sdk-utilities"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [10]string{"supply", "queryTx", "broadcastTx", "txMetadata", "block", "liquidityParams", "liquidityPools", "mintInflation", "mintParams", "mintAnnualProvision"}

// SupplyPayload is the payload type of the sdk-utilities service supply method.
type SupplyPayload struct {
	// Chain to get data from
	ChainName string
	// gRPC port for selected chain, defaults to 9090
	Port *int
}

// Supply2 is the result type of the sdk-utilities service supply method.
type Supply2 struct {
	Coins []*Coin
}

// QueryTxPayload is the payload type of the sdk-utilities service queryTx
// method.
type QueryTxPayload struct {
	// Chain to get data from
	ChainName string
	// gRPC port for selected chain, defaults to 9090
	Port *int
	// Transaction hash to query
	Hash string
}

// BroadcastTxPayload is the payload type of the sdk-utilities service
// broadcastTx method.
type BroadcastTxPayload struct {
	// Chain to get data from
	ChainName string
	// gRPC port for selected chain, defaults to 9090
	Port *int
	// Transaction bytes
	TxBytes []byte
}

// TransactionResult is the result type of the sdk-utilities service
// broadcastTx method.
type TransactionResult struct {
	Hash string
}

// TxMetadataPayload is the payload type of the sdk-utilities service
// txMetadata method.
type TxMetadataPayload struct {
	// Transaction bytes
	TxBytes []byte
}

// TxMessagesMetadata is the result type of the sdk-utilities service
// txMetadata method.
type TxMessagesMetadata struct {
	MessagesMetadata []*MsgMetadata
}

// BlockPayload is the payload type of the sdk-utilities service block method.
type BlockPayload struct {
	// Chain to get data from
	ChainName string
	// gRPC port for selected chain, defaults to 9090
	Port *int
	// Height of the block to query
	Height int64
}

// BlockData is the result type of the sdk-utilities service block method.
type BlockData struct {
	Height int64
	Block  []byte
}

// LiquidityParamsPayload is the payload type of the sdk-utilities service
// liquidityParams method.
type LiquidityParamsPayload struct {
	// Chain to get data from
	ChainName string
	// gRPC port for selected chain, defaults to 9090
	Port *int
}

// LiquidityParams2 is the result type of the sdk-utilities service
// liquidityParams method.
type LiquidityParams2 struct {
	LiquidityParams []byte
}

// LiquidityPoolsPayload is the payload type of the sdk-utilities service
// liquidityPools method.
type LiquidityPoolsPayload struct {
	// Chain to get data from
	ChainName string
	// gRPC port for selected chain, defaults to 9090
	Port *int
}

// LiquidityPools2 is the result type of the sdk-utilities service
// liquidityPools method.
type LiquidityPools2 struct {
	LiquidityPools []byte
}

// MintInflationPayload is the payload type of the sdk-utilities service
// mintInflation method.
type MintInflationPayload struct {
	// Chain to get data from
	ChainName string
	// gRPC port for selected chain, defaults to 9090
	Port *int
}

// MintInflation2 is the result type of the sdk-utilities service mintInflation
// method.
type MintInflation2 struct {
	MintInflation []byte
}

// MintParamsPayload is the payload type of the sdk-utilities service
// mintParams method.
type MintParamsPayload struct {
	// Chain to get data from
	ChainName string
	// gRPC port for selected chain, defaults to 9090
	Port *int
}

// MintParams2 is the result type of the sdk-utilities service mintParams
// method.
type MintParams2 struct {
	MintParams []byte
}

// MintAnnualProvisionPayload is the payload type of the sdk-utilities service
// mintAnnualProvision method.
type MintAnnualProvisionPayload struct {
	// Chain to get data from
	ChainName string
	// gRPC port for selected chain, defaults to 9090
	Port *int
}

// MintAnnualProvision2 is the result type of the sdk-utilities service
// mintAnnualProvision method.
type MintAnnualProvision2 struct {
	MintAnnualProvision []byte
}

// SDK service representation of a Cosmos SDK types.Coin
type Coin struct {
	Denom  string
	Amount string
}

// Metadata related to some message contained in a transaction
type MsgMetadata struct {
	MsgType             string
	IbcTransferMetadata *IBCTransferMetadata
}

// Metadata related to an IBC Transfer
type IBCTransferMetadata struct {
	SourcePort       *string
	SourceChannel    *string
	Token            *Coin
	Sender           *string
	Receiver         *string
	TimeoutHeight    *IBCHeight
	TiemoutTimestamp *uint64
}

// The plain type associated with ibc-go types.Height struct
type IBCHeight struct {
	RevisionNumber *uint64
	RevisionHeight *uint64
}
